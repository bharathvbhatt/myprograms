================================================================================
ASIX AX88172A USB2.0 Fast Ethernet Network Adapter 
Driver Compilation & Configuration on the Linux
================================================================================

This driver is designed for Kernel 2.6.9.x or above

============================
Revision History :
============================
Version	1.3.0					June. 1, 2011
 * Fixups for compilation issues in kernel version 2.6.38.

Version	1.2.0					Aug. 26, 2010
 * Fixups for compilation issues in kernel version 2.6.35.
 * Force media link up in PHY mode.

Version	1.1.0					June. 25, 2010
 * Fixups for compilation issues in kernel version 2.6.31.
 * Bug fixed for Dual PHY mode.
 
Version	1.0.0					Nov. 17, 2008
 * New Release.

============================
Prerequisites :
============================

Prepare for compiling AX88172A driver, you need the Linux2.6 Kernel source or
Kernel header files. If you don't have the Kernel source, you can get from
www.kernel.org or from one of its mirrors. If you dont know how to do, please
refer to KERNEL-HOWTO.

p.s. Please make sure the kernel is built with "Support for Host-side, EHCI,
     OHCI, and UHCI" option support.

============================
Getting Start :
============================

1. Extract AX88172A_Linux_2.6.25_Driver_v1.0.0_Source.tar.bz2 to your template
   directory
 
2. Go to the template directory, and executing the following command to
   compile AX88172A Driver.
 
	[AX88172A_Linux_2.6.25_Driver_v1.0.0_Source]# make
			
3. If the compilation well, the ax88172a.ko and ioctl will be created under the
   current directory.
    ax88172a.ko is the main driver for AX88172A.
    ioctl is the demo tool of the AX88172A serial interface.


4. If you want to use modprobe command to mount AX88178 driver, executing the
   following command to install AX88172A driver on your Linux.

	[AX88172A_Linux_2.6.25_Driver_v1.0.0_Source]# make install

============================
Usage of the Driver :
============================

If you want to mount the AX88172A driver , go to the driver directory and
executing the following command:
 
	[AX88172A_Linux_2.6.25_Driver_v1.0.0_Source]# insmod ax88172a.ko
		or
	[Anywhere]# modprobe ax88172a

If you want to unmount the AX88172A driver, just typing the following command:

	[anywhere]# rmmod ax88172a

============================
Usage of the Demo Tool :
============================

The demo tool is used to demonstrate AX88172A serial interface including:
Uart, I2C and SPI functions. This section only describes the usage the this
demo tool, the detailed implementation of the serial interface please refer to
the AX88172A_SerialInterfaceWindowsAPILibrary_UserGuide.

Uart Interface:
The item is used to verify the Uart function of the AX88172A; the Uart port on
the AX88172A is connected to the PC via rs232 cable.

1. Excute demo tool by following command:
	[AX88172A_Linux_2.6.25_Driver_v1.0.0_Source]# ./ioctl

2. Select interface of the AX88172A (assume the AX88172A is eth1):
	Please input the interface of the AX88172A. (ex. eth1):: eth1

3. Select item 1 for Uart function:
	AX88172A :: eth1 , IP :: 0.0.0.0
	Please specify the number of the Test item:
	1 : UART
	2 : I2C
	3 : SPI
	4 : Exit
	: 1

4. Specify the baud rate of the Uart:
	Please specify the number of the baud rate:
	1 : 3600
	2 : 4800
	3 : 7200
	4 : 9600
	5 : 19200
	6 : 38400
	7 : 57600
	: 4
p.s. Please specify the same baud rate on remote console.

5. Select item 1 to verify Uart sned function:
	Please select test item
	1 : Uart send
	2 : Uart receive
	3 : Exit UART test
	: 1

6. Input the string for sending:
	Please input the string:0123456789

7. Check result on the remote console.

8. Select item 2 to verify Uart receive function:
	Please select test item
	1 : Uart send
	2 : Uart receive
	3 : Exit UART test
	:2

9. Input the string on the remote consloe for example "1234567890",
   and check the result:
	Start UART receive (Press Enter to stop)
	1234567890


I2C interface:
The item is used to verify the I2C function of the AX88172A; the AX88172A was 
connected with a EEPROM 24C02B via I2C bus.

1. Excute demo tool by following command:
	[AX88172A_Linux_2.6.25_Driver_v1.0.0_Source]# ./ioctl

2. Select interface of the AX88172A (assume the AX88172A is eth1):
	Please input the interface of the AX88172A. (ex. eth1):: eth1

3. Select item 2 for I2C function:
	AX88172A :: eth1 , IP :: 0.0.0.0
	Please specify the number of the Test item:
	1 : UART
	2 : I2C
	3 : SPI
	4 : Exit
	: 2

	Configure AX88172A I2C : Master mode. done

4. Select item 1 to read data from EEPROM:
	Please specify the number of the Test item:
	1 : Read data from 24c02
	2 : Write data to 24c02
	3 : Exit
	: 1

5. Select item 2 to write data to EEPROM:
	Please specify the number of the Test item:
	1 : Read data from 24c02
	2 : Write data to 24c02
	3 : Exit
	: 2

6. Specify the address of the EEPROM:
	Please specify the device address (hex): 0x50

7. Specify the offset to write:
	Please specify the offset (hex): 0x10

8. Specify the data to write:
	Please specify the data (hex): 0x5A

9. Specify the address of the EEPROM
	Please specify the device address (hex): 0x50

10. Specify the offset to read
	Please specify the offset (hex): 0x10

11. Check the result:
	Read Slave device(0x50): 0x10 = 0x5A


SPI interface:
The item is used to verify the SPI function of the AX88172A; the AX88172A was 
connected with a AX11000 development board via SPI bus.

1. Excute demo tool by following command:
	[AX88172A_Linux_2.6.25_Driver_v1.0.0_Source]# ./ioctl

2. Select interface of the AX88172A (assume the AX88172A is eth1):
	Please input the interface of the AX88172A. (ex. eth1):: eth1

3. Select item 3 for I2C function:
	AX88172A :: eth1 , IP :: 0.0.0.0
	Please specify the number of the Test item:
	1 : UART
	2 : I2C
	3 : SPI
	4 : Exit
	: 3

	Configure AX88172A SPI interface : Master mode, Mode 3, 1.5Mhz

4. Select item 2 to write data to slave device on AX11000 development baord:
	Please specify the number of the Test item:
	1 : Read data from Slave device
	2 : Write data to Slave device
	3 : Exit
	: 2

5. Specify the data to send:
	Please specify the data to write:
	DATA[0] = 0x11
	DATA[1] = 0x22
	DATA[2] = 0x33
	DATA[3] = 0x44
	DATA[4] = 0x55
	DATA[5] = 0x66
	DATA[6] = 0x77
	DATA[7] = 0x88
	DATA[8] = 0x99
	DATA[9] = 0xaa
	DATA[10] = 0xbb
	DATA[11] = 0xcc

6. Select item 1 to read data from slave device on AX11000 development baord:
	Please specify the number of the Test item:
	1 : Read data from Slave device
	2 : Write data to Slave device
	3 : Exit
	: 1

7. Check the result:
	DATA[0] = 0x11
	DATA[1] = 0x22
	DATA[2] = 0x33
	DATA[3] = 0x44
	DATA[4] = 0x55
	DATA[5] = 0x66
	DATA[6] = 0x77
	DATA[7] = 0x88
	DATA[8] = 0x99
	DATA[9] = 0xaa
	DATA[10] = 0xbb
	DATA[11] = 0xcc
