#!/bin/sh

set +e
set -x

MODEL="$1"
CELLMODEM=0
RESET=0
/bin/lua /etc/scripts/usb-enum > /tmp/usb-listing
USB_LISTING=/tmp/usb-listing

# Setup modem directory
rm -rf /var/run/.modem/cellmodem*
mkdir -p /var/run/.modem/

modprobe usbserial

# Remove cellctl service if no modem was available
grep '^cellctld:' /etc/config/inittab
if [ "$?" == "0" ]; then
	echo "Removing cellctld as a start-up service"
	grep -v "^cellctld:" /etc/config/inittab > /etc/config/inittab.cellctl
	mv /etc/config/inittab.cellctl /etc/config/inittab
	kill -HUP 1
fi

# TODO move all this to udev
if grep "^S:.*Manufacturer=Sierra" $USB_LISTING ; then
    modprobe sierra
    if grep "^S:.*Product=MC87" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra
	> /var/run/.modem/cellmodem_is_gsm
	> /var/run/.modem/cellmodem_is_internal
	if [ "$MODEL" = im42xx ]; then
		> /var/run/.modem/cellmodem_has_gps
		ln -sf /dev/ttyUSB2 /dev/cellnmea01
	elif [ -x /bin/setfset ]; then 
		OPTS=`/bin/setfset -qf | cut -f3 -d' '`
		if echo $OPTS | grep "3g-gps" &> /dev/null ; then
			> /var/run/.modem/cellmodem_has_gps
			ln -sf /dev/ttyUSB2 /dev/cellnmea01
		fi
	fi
	ln -sf /dev/ttyUSB3 /dev/cellcommand01
	ln -sf /dev/ttyUSB6 /dev/cellmodem01
	RESET=1
	killall -9 swisdk
	CELLMODEM=1
    elif grep "^S:.*Product=HSPA Modem" $USB_LISTING || \
	    grep "^S:.*Product=C888" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra
	> /var/run/.modem/cellmodem_is_gsm
	> /var/run/.modem/cellmodem_is_external
	ln -sf /dev/ttyUSB3 /dev/cellcommand01
	ln -sf /dev/ttyUSB6 /dev/cellmodem01
	# UMTS does not currently use Sierra CNS mode
	killall -9 swisdk
	CELLMODEM=1
    elif grep "^S:.*Product=.*MC57" $USB_LISTING || \
	    grep "^P:.*Vendor=1199.*ProdID=0028" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra
	> /var/run/.modem/cellmodem_is_cdma
	> /var/run/.modem/cellmodem_is_internal
	ln -sf /dev/ttyUSB0 /dev/cellcommand01
	ln -sf /dev/ttyUSB0 /dev/cellmodem01
	CELLMODEM=1
    elif grep "^S:.*Product=Sierra Wireless USB 598" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra
	> /var/run/.modem/cellmodem_is_cdma
	> /var/run/.modem/cellmodem_is_external
	ln -sf /dev/ttyUSB0 /dev/cellcommand01
	ln -sf /dev/ttyUSB0 /dev/cellmodem01
	CELLMODEM=1
    elif grep "^S:.*Product=.*USB 308" $USB_LISTING ||
           grep "^S:.*Product=.*AirCard 31[0-9]U" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra
	> /var/run/.modem/cellmodem_is_gsm
	> /var/run/.modem/cellmodem_is_external
	ln -sf /dev/ttyUSB2 /dev/cellcommand01
	ln -sf /dev/ttyUSB3 /dev/cellmodem01
	RESET=1
	killall -9 swisdk
	CELLMODEM=1
    # DirectIP Sierra Modem
    elif grep "^S:.*Product=MC77" $USB_LISTING && \
	   grep "^S:.*Vendor=1199.*ProdID=68a3" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra_directip
	> /var/run/.modem/cellmodem_is_internal
	modprobe sierra_net
	ln -sf /dev/ttyUSB3 /dev/cellcommand01
	ln -sf /dev/ttyUSB3 /dev/cellmodem01
	RESET=1
	CELLMODEM=1
    elif grep "^S:.*Product=.*320U" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_sierra_directip
	> /var/run/.modem/cellmodem_is_lte
	> /var/run/.modem/cellmodem_is_internal
	ln -sf /dev/ttyUSB2 /dev/cellcommand01
	ln -sf /dev/ttyUSB2 /dev/cellmodem01
	modprobe sierra_net
	RESET=1
	CELLMODEM=1
    # Sierra Gobi
    elif grep "^S:.*Product=MC77" $USB_LISTING ||
	    grep "^S:.*Product=MC73" $USB_LISTING;  then
	> /var/run/.modem/cellmodem_is_gobi
	> /var/run/.modem/cellmodem_is_internal

	case "$MODEL" in
		acm700x | les160xa | b093 | acm7004-5 | cm71xx | cm7196 | im72xx | les17xxa)
			> /var/run/.modem/cellmodem_has_gps
			;;
		acm550x)
			> /var/run/.modem/cellmodem_has_gps
			ln -sf /dev/ttyUSB1 /dev/cellnmea01
			;;
		*)
			if [ -x /bin/setfset ]; then
				OPTS=`/bin/setfset -qf | cut -f3 -d' '`
				if echo $OPTS | grep "lte-gps" &> /dev/null ; then
					> /var/run/.modem/cellmodem_has_gps
					ln -sf /dev/ttyUSB1 /dev/cellnmea01
				fi
			fi
			;;
	esac

	if grep "^S:.*Product=MC7750" $USB_LISTING; then
		> /var/run/.modem/cellmodem_is_cdma_gobi
		> /var/run/.modem/cellmodem_is_profile_ro
	fi

	# Not used for anything in Gobi Mode, but needed for modem detection
	rmmod sierra
	modprobe GobiSerial
	modprobe GobiNet

	if [ "$MODEL" != im72xx ] &&
		[ "$MODEL" != cm7196 ] &&
		[ "$MODEL" != cm71xx ] &&
		[ "$MODEL" != acm700x ] &&
		[ "$MODEL" != les160xa ] &&
		[ "$MODEL" != b093 ] &&
		[ "$MODEL" != les17xxa ] &&
		[ "$MODEL" != acm7004-5 ]; then
		ln -sf /dev/ttyUSB2 /dev/cellcommand01
		ln -sf /dev/ttyUSB2 /dev/cellmodem01
	fi

	RESET=1
	CELLMODEM=1

	# Multi-carrier modem carrier detection
	if grep "^S:.*Product=MC7354" $USB_LISTING;  then
		> /var/run/.modem/cellmodem_is_multicarrier

		# MC7354 is currently the only device for which we
		# have remotely managed firmware.

		# Set cellmodem firmware directory, if not present
		cellfwdir=`/bin/config -g config.cellmodem.firmware.directory | cut -d' ' -f 2`
		if [ -z "$cellfwdir" ]; then
			case $MODEL in
			acm550x)
				cellfwdir=/var/mnt/storage.usb/cellfw
				;;
			im72xx | les17xxa)
				cellfwdir=/var/mnt/storage.usb/cellfw
				;;
			acm700x | les160xa | acm7004-5 | b093)
				cellfwdir=/var/mnt/storage.nvlog/cellfw
				;;
			esac
			config -s config.cellmodem.firmware.directory="$cellfwdir" -r storage
		fi
	fi

    fi

# Initialise pantech cellular modem
elif grep "^S:.*Manufacturer=Pantech, Incorporated" $USB_LISTING; then
    if grep "^S:.*Product=PANTECH UML290" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_pantech
	> /var/run/.modem/cellmodem_is_lte
	> /var/run/.modem/cellmodem_is_external
	modprobe qcaux
	ln -sf /dev/ttyUSB2 /dev/cellcommand01
	ln -sf /dev/ttyACM0 /dev/cellmodem01
	CELLMODEM=1
    fi

# Initialise LG cellular modem
elif grep "^S:.*Manufacturer=LG ELECTRONICSInc" $USB_LISTING; then
    if grep "^S:.*Product=LG UDC-AHB Subsystem" $USB_LISTING; then
	> /var/run/.modem/cellmodem_is_lg
	> /var/run/.modem/cellmodem_is_lte
	> /var/run/.modem/cellmodem_is_external
        modprobe lg-vl600
	ln -sf /dev/ttyACM0 /dev/cellcommand01
	ln -sf /dev/ttyACM0 /dev/cellmodem01
	CELLMODEM=1
    fi
fi

if [ -x /sbin/ModemManager ]; then
	# Initialise Modem Manager cellmodem
	# Currently this is just Huawei Ethernet based modems, but this
	# will get more complicated later on
	INIT_TAB="/etc/config/inittab"
	WATCH_ID="dbus-watchdog"
	WATCH_SCRIPT="/etc/scripts/$WATCH_ID"
	INIT_DELAY=10
	PROBE_COUNT=0
	PROBE_MAX=12
	if grep "^S:.*Manufacturer=HUAWEI Technology" $USB_LISTING; then
		if grep "^S:.*Product=HUAWEI Mobile" $USB_LISTING; then
			modprobe option      # for USB modems with mystery TTYs
			modprobe cdc_ether   # for USB modems that do USBECM
			> /var/run/.modem/cellmodem_is_mm_ether
			> /var/run/.modem/cellmodem_is_lte
			> /var/run/.modem/cellmodem_is_internal

			if [ "$MODEL" != im72xx ] &&
				[ "$MODEL" != cm7196 ] &&
				[ "$MODEL" != cm71xx ] &&
				[ "$MODEL" != acm700x ] &&
				[ "$MODEL" != b093 ] &&
				[ "$MODEL" != les160xa ] &&
				[ "$MODEL" != les17xxa ] &&
				[ "$MODEL" != acm7004-5 ]; then
				ln -sf /dev/ttyUSB0 /dev/cellcommand01
				ln -sf /dev/ttyUSB1 /dev/cellmodem01
				# Some models do not support NMEA
				if [ -e "/dev/ttyUSB3" ]; then
					> /var/run/.modem/cellmodem_has_gps
					ln -sf /dev/ttyUSB3 /dev/cellnmea01
				fi
			else
				if [ -e "/dev/cellnmea01" ]; then
					> /var/run/.modem/cellmodem_has_gps
				fi
			fi

			# We also need dbus for this, so turn it on
			# This is a bit weird - but if we dont do anything with the output
			# DBUS cracks a sad and won't let anything connect
			MAGIC=`dbus-daemon --system --fork`
			# Wait for dbus
			sleep $INIT_DELAY
			CELLMODEM=1
		fi
	fi
fi

rm $USB_LISTING

# If on a dual-sim device which needs it, initialize the current sim to default.
# This is done in cellctld now, the first time it comes up

# On units with a resettable cellmodem USB slot - if we are supposed to 
# have a cellmodem but we don't find it - reset the slot up to 5 times
# to try and get it running. If that doesn't work, we reboot; but we'll only
# do that once.

if [ -x /bin/setfset ] && [ -f /sys/kernel/cellctl/cell_reset ]; then
	OPTS=`/bin/setfset -qf | cut -f3 -d' '`
	if echo $OPTS | grep "3g" &> /dev/null ; then
		if [ ! -d /var/run/.modem ]; then
			CTR=0
			if [ -f /var/run/.modem_probe_ctr ]; then
				CTR=`cat /var/run/.modem_probe_ctr`
			fi
			if [ "$CTR" -lt "5" ]; then
				logger "Resetting cellmodem slot - attempt $CTR"
				echo 10 > /sys/kernel/cellctl/cell_reset
				CTR=$[CTR + 1]
				echo $CTR > /var/run/.modem_probe_ctr
				sleep 30;
				. /etc/rc.cellmodem
				exit
			fi
			if [ ! -f /etc/config/.modem_reboot ]; then 
				touch /etc/config/.modem_reboot
				logger "Failed to find cellmodem - rebooting"
				reboot
			else
				logger "Failed to find cellmodem - giving up"
			fi	
		fi
		rm -f /etc/config/.modem_reboot
		rm -f /var/run/.modem_probe_ctr
	fi
fi

# Start cellctld & ledmon if required
if [ "$CELLMODEM" == "1" ]; then
	if [ -x /bin/cellctl ]; then
		grep '^cellctld:' /etc/config/inittab
		if [ "$?" != "0" ]; then
			echo "Adding cellctl as a start-up service"
			iline="cellctld:unknown:/bin/cellctld"
			cp /etc/config/inittab /etc/config/inittab.cellctl
			echo "${iline}" >> /etc/config/inittab.cellctl
			mv /etc/config/inittab.cellctl /etc/config/inittab
			kill -HUP 1
		fi

# These commands have been moved to cellctld itself, and are run once when it starts
#		if [ "$RESET" == "1" ]; then
#			/bin/cellctl --radio=on
#
#			# If on a dual-sim device which needs it, initialize the current sim to default.
#			# Since cellctl reset has already been run, tell sim_select not to run it again.
#			case "$MODEL" in
#			"acm700x" | "acm7004-5")
#				cellctl -r --sim=0
#				;;
#			*)
#				/bin/cellctl -r
#				;;
#			esac
#		fi
	fi

	if [ -x /bin/ledmon ]; then
		iline="ledmon:unknown:/bin/ledmon"
		grep "${iline}" /etc/config/inittab
		if [ "$?" != "0" ]; then
			echo "Adding ledmon as a start-up service"
			grep -v "^ledmon:" /etc/config/inittab > /etc/config/inittab.ledmon
			echo "${iline}" >> /etc/config/inittab.ledmon
			mv /etc/config/inittab.ledmon /etc/config/inittab
			kill -HUP 1
		fi
	fi
fi
