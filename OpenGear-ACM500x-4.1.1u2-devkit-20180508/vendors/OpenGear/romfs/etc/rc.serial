#!/bin/sh

# udev-serial now replaces most of this file
exit 0

MODEL="$1"

#------------------------------------------------------------

# clear the serial config file,  we will rebuild it

> /var/run/serial-ports

# Allow non-root users to enumerate serial ports
chmod a+r /var/run/serial-ports

SKIPDEV=
if [ -x /bin/setfset ]; then
    if [ "`expr \"$MODEL\" : '\(acm550\)'`" = "acm550" ]; then
	    NUMPORTS=`/bin/setfset -qs | cut -f4- -d" "`
	    MODEM=`/bin/setfset -qf | grep -o modem`
	    SKIP=1
	    PORT=1
	    mknod /dev/sercon c 204 16
	    if [ "$MODEM" = "modem" ]; then
		mknod /dev/modem01 c 4 68
		SKIPDEV=ttyS4
	    fi
	    if [ -L /dev/cellnmea01 ]; then
		NMEA="/dev/cellnmea01"
	    fi
    elif [ "`expr \"$MODEL\" : '\(acm500\)'`" = "acm500" ]; then
	    SKIP=2
	    NUMPORTS=`/bin/setfset -qs | cut -f4- -d" "`
	    PORT=1
	    mknod /dev/sercon c 204 16
	    MODEM=`/bin/setfset -qf | grep -o modem`
	    if [ "$MODEM" = "modem" ]; then
		mknod /dev/modem01 c 204 19
	    fi
	    if [ -L /dev/cellnmea01 ]; then
		NMEA="/dev/cellnmea01"
	    fi
    elif [ "`expr \"$MODEL\" : '\(im72xx\)'`" = "im72xx" ]; then
   	    SKIP=5
	    PORT=1
	    # We always have a dedicated console and modem 
	    mknod /dev/sercon c 4 65
	    mknod /dev/modem01 c 4 66
	    if [ -L /dev/cellnmea01 ]; then
		NMEA="/dev/cellnmea01"   
	    fi	
    elif [ "`expr \"$MODEL\" : '\(cm71xx\)'`" = "cm71xx" ]; then
   	    SKIP=3
	    PORT=1
	    # We always have a dedicated console
	    mknod /dev/sercon c 4 64
    elif [ "`expr \"$MODEL\" : '\(cm7196\)'`" = "cm7196" ]; then
   	    SKIP=3
	    PORT=1
	    # We always have a dedicated console
	    mknod /dev/sercon c 4 64
	    if [ -L /dev/cellnmea01 ]; then
		NMEA="/dev/cellnmea01"
	    fi
    elif [ "`expr \"$MODEL\" : '\(acm70\)'`" = "acm70" ]; then
	    SKIP=2
	    PORT=1
	    # Skip any 16550 ports
	    SKIP_16550=1
	    # Console shared with port 1 (eventually)
	    mknod /dev/sercon c 4 64
	    if [ -L /dev/cellnmea01 ]; then
		NMEA="/dev/cellnmea01"
	    fi
    fi 
elif [ "`expr \"$MODEL\" : '\(sd4002\)'`" = "sd4002" -o "$MODEL" = "cm4002" ]; then 
    mknod /dev/port01 c 204 16 # ttyAM0 is the first port
    chmod 0660 /dev/port01
    mknod /dev/sercon c 204 16 # ttyAM0 is also the serial console
    echo "port01 --> ttyAM0" >> /var/run/serial-ports
    PORT=2
    SKIP=2
elif [ "$MODEL" = "ucd1701" ]; then 
    mknod /dev/port01 c 4 64 # ttyS0 is the first port
    chmod 0660 /dev/port01
    mknod /dev/sercon c 4 64 # ttyS0 is also the serial console
    echo "port01 --> ttyS0" >> /var/run/serial-ports
    PORT=2
    SKIP=100 # we only want 1 port ever, so skip any others
elif [ "$MODEL" = "ucd1716" ]; then 
    mknod /dev/sercon c 4 64 # ttyS0 is the dedicated serial console
    PORT=1
    SKIP=3
elif [ "$MODEL" = "kcs61xx" ] || [ "$MODEL" = "cms61xx" -a ! -f /etc/virt ]; then 
    mknod /dev/sercon c 4 64 # ttyS0 is the dedicated serial console
    # get total number of uarts
    NUM=`tail -n +2 /proc/tty/driver/serial | grep -v "uart:unknown" | wc -l`
    if [ "$NUM" -le 8 ]; then
	mknod /dev/port01 c 4 64 # ttyS0 is also the first port
	chmod 0660 /dev/port01
	echo "port01 --> ttyS0" >> /var/run/serial-ports
	PORT=2
	SKIP=3
	SETSERIAL=$NUM
    else
	PORT=1
	SKIP=3
	SETSERIAL=1
    fi
    # fix up the interrupts for all ports
    i=0
    for irq in 4 3 7 5
    do
    	setserial /dev/ttyS$i irq $irq
    	i=`expr $i + 1`
	[ $i -ge $SETSERIAL ] && break
    done
elif [ "$MODEL" = "im42xx" ]; then 
    mknod /dev/sercon c 204 16 # ttyAM0 is the serial console
    PORT=1
    SKIP=2
    # skip the modem port as well. It is on the serial port on irq 4
    SKIPDEV="ttyS"`grep irq:4 /proc/tty/driver/serial | cut -f1 -d:`  
    if [ -L /dev/cellnmea01 ]; then
        NMEA="/dev/cellnmea01"
    fi
elif [ "$MODEL" = "im4004" ]; then 
    mknod /dev/sercon c 204 16 # ttyAM0 is the serial console
    PORT=1
    SKIP=2
    # skip the PCMCIA modem port as well. It is on the serial port on irq 3
    SKIPDEV="ttyS"`grep irq:3 /proc/tty/driver/serial | cut -f1 -d:`  
elif [ -c /dev/ttyAM0 ]; then
    mknod /dev/sercon c 204 16 # ttyAM0 is the serial console
    PORT=1
    SKIP=2
else
    # find the console from the command line, we may override below
    CON=`dmesg | grep console= | sed 's/.*console=\([^ ,][^ ,]*\).*/\1/'`
    if [ "${CON}" -a -c "${CON}" ]; then
	SKIPDEV="${SKIPLIST} ${CON}"
	ln -s /dev/${CON} /dev/sercon
    fi
    PORT=1
    SKIP=2
fi


# acm500x/550x first 4 ports are currently uart:unknown
if [ -n "$NUMPORTS" ]; then
    LINES=`cat /proc/tty/driver/ttyAM | grep "uart:Pegasus" | cut -f1 -d:`
    for m in $LINES; do
	    PNAME=`printf "port%02d" $PORT`
	    TNAME="ttyAM$m"
	    mknod /dev/$PNAME c 204 `expr $m + 16`
	    chmod 0660 /dev/$PNAME
	    echo "$PNAME --> $TNAME" >> /var/run/serial-ports
	    PORT=`expr $PORT + 1`
	    if [ $PORT -gt $NUMPORTS ];then
		break;
	    fi
    done
fi

# Create the nodes for all the ST16554 ports for the acm550x
if [ -n "$NUMPORTS" ] && [ $PORT -lt $NUMPORTS ]; then
    LINES=`tail -n +${SKIP} /proc/tty/driver/serial | grep "uart:ST16654" | cut -f1 -d:`
    for m in $LINES; do
	    PNAME=`printf "port%02d" $PORT`
		TNAME="ttyS$m"
	    mknod /dev/$PNAME c 4 `expr $m + 64`
	    chmod 0660 /dev/$PNAME
	    echo "$PNAME --> $TNAME" >> /var/run/serial-ports
	    PORT=`expr $PORT + 1`
    done
fi

# Create the nodes for all the remaining 16550 ports, start at SKIP
# lines in and skipping anything in skip list
LINES=`tail -n +${SKIP} /proc/tty/driver/serial | grep "XR17" | cut -f1 -d:`
for m in $LINES; do
	    PNAME=`printf "port%02d" $PORT`
		TNAME="ttyS$m"
		[ "${TNAME}" = "${SKIPDEV}" ] && continue
	    mknod /dev/$PNAME c 4 `expr $m + 64`
	    chmod 0660 /dev/$PNAME
	    echo "$PNAME --> $TNAME" >> /var/run/serial-ports
	    PORT=`expr $PORT + 1`
    done

if [ ! "$SKIP_16550" == "1" ]; then
	# Create the nodes for all the remaining 16550 ports, start at SKIP
	# lines in and skipping anything in skip list
	LINES=`tail -n +${SKIP} /proc/tty/driver/serial | grep "16550" | cut -f1 -d:`
	for m in $LINES; do
		PNAME=`printf "port%02d" $PORT`
		TNAME="ttyS$m"
		[ "${TNAME}" = "${SKIPDEV}" ] && continue
		mknod /dev/$PNAME c 4 `expr $m + 64`
		chmod 0660 /dev/$PNAME
		echo "$PNAME --> $TNAME" >> /var/run/serial-ports
		PORT=`expr $PORT + 1`
	done
fi

# Handle any Modems with GPS serial ports
if [ -n "$NMEA" ]; then
	PNAME=`printf "port%02d" $PORT`
	ln -s $NMEA /dev/$PNAME
	echo "$PNAME --> $NMEA" >> /var/run/serial-ports
	PORT=`expr $PORT + 1`
fi

# Handle a single Cisco USB Console for now
if [ -d "/sys/bus/usb/drivers" ]; then
	/etc/scripts/usb-console-enum $PORT
fi 

exit 0
# this __MUST__ be at the VERY end of the file - do NOT move!!
#
# Local Variables:
# c-basic-offset: 4
# tab-width: 8
# end:
# vi: tabstop=8 shiftwidth=4 textwidth=79 noexpandtab
