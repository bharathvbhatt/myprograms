#!/bin/sh

if [ -z "$ALERT_XMLID" -o -z "$ALERT_UPS" -o -z "$ALERT_STATUS" ]; then
	echo "Script does not have mandatory environment"
	exit 1
fi

# If there's a user-configured script, run it instead
scripts[0]="/etc/config/scripts/status-alert.${ALERT_UPS}"
scripts[1]="/etc/config/scripts/ups-status-alert"
for (( i=0 ; i < ${#scripts[@]} ; i++ )); do
	if [ -f "${scripts[$i]}" ]; then
		exec /bin/sh "${scripts[$i]}"
	fi
done

retval=0

if [ "$ALERT_STATUS" == "ONLINE" ]; then
	status="On line power"
	nagios_code="0"
elif [ "$ALERT_STATUS" == "ONBATT" ]; then
	status="On battery"
	nagios_code="1"
elif [ "$ALERT_STATUS" == "LOWBATT" ]; then
	status="Battery is low"
	nagios_code="2"
else
	status="Unrecognized status"
	nagios_code="1"
fi

nsca=$(config -g $ALERT_XMLID.nsca.enabled | cut -f2- -d' ')
if [ "$nsca" == "on" ]; then

	nagios_name=""

	if [ ${ALERT_UPS:(-9)} == "@localhost" ]; then
		for (( i=1 ;; i++ )); do
			upsname="$(config -g config.ups.monitors.monitor$i.name | cut -f2- -d' ')"
			if [ -z "$upsname" ]; then
				break
			fi
			upsname="${upsname}@localhost"
			if [ "$upsname" == "$ALERT_UPS" ]; then
				nagios_name="$(config -g config.ups.monitors.monitor$i.nagios.name | cut -f2- -d' ')"
				break
			fi
		done
	else
		for (( i=1 ;; i++ )); do
			name="$(config -g config.ups.powers.power$i.name | cut -f2- -d' ')"
			if [ -z "$name" ]; then
				break
			fi
			address="$(config -g config.ups.powers.power$i.address | cut -f2- -d' ')"
			upsname="${name}@${address}"
			if [ "$upsname" == "$ALERT_UPS" ]; then
				nagios_name="$(config -g config.ups.powers.power$i.nagios.name | cut -f2- -d' ')"
				break
			fi
		done
	fi

	if [ ! -z "$nagios_ups" ]; then
		export NAME="$nagios_name"
		export CODE="$nagios_code"
		export CHECK="alert_ups_${nagios_name}"
		export STATUS="Status changed to \"$ALERT_STATUS\" ($status)"

		/bin/sh /etc/scripts/alert-nsca
		retval=$(( $? || $retval ))
	fi
fi

snmp=$(config -g $ALERT_XMLID.snmp.enabled | cut -f2- -d' ')
if [ "$snmp" == "on" ]; then

	export OID="enterprises.opengear"
	export AGENT=""
	export UPTIME=""
	export SPECIFIC_TYPE=".ogNetUpsMib.ogNetUpsMibObjects.ognupsEvent.ognupsEventTable"
	export TRAP_NAME="ognupsEventOccurred"
	export NOTIFICATION_TYPE=".ogNetUpsMib.ogNetUpsMibNotificationPrefix.ognupsMibNotifications"

	/bin/sh /etc/scripts/alert-snmp \
		".ognupsEventEntry.ognupsEventName" \
		"s" \
		"$ALERT_UPS" \
		".ognupsEventEntry.ognupsEventType" \
		"s" \
		"$ALERT_STATUS"

	retval=$(( $? || $retval ))
fi

cms=$(config -g config.cms.enabled | cut -f2- -d' ')
if [ "$cms" == "on" ]; then
	alertnum=$(echo $ALERT_XMLID | sed 's/config.alerts.alert//')
	nodename=$(config -g config.cms.node.name | cut -f2- -d' ')
	/bin/run_check -c check_xmlalert_${alertnum}_${nodename}
	retval=$(( $? || $retval ))
fi

for suffix in "" "2"; do

	email=$(config -g $ALERT_XMLID.email$suffix | cut -f2- -d' ')
	if [ -z "$email" ]; then
		continue
	fi

	export SUBJECT="Alert on $ALERT_UPS on $(hostname)"
	export TOADDR="$email"
	export BODY="UPS $ALERT_UPS status is $ALERT_STATUS ($status)"

	/bin/sh /etc/scripts/alert-email $suffix
	retval=$(( $? || $retval ))
done

exit $retval

