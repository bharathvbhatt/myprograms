#
# $Id: baytechOG.dev,v 1.1 2010-11-29 00:03:11 anad Exp $
#
# Baytech RPC-3 - old style model (not "NC")
#
# Tested the following firmware versions:
#    Revision F 5.00, (C) 2001
#    Revision F 5.01, (C) 2001
# Assumes:
# 1. command confirmation : disabled (3/configuration, 6/outlets, 2/...)
# 2. admin account password : "baytech" (2/manage users, 2/admin, 1/...)
# 3. net: prompt for password : enabled (3/configuration, 5/access, 2/...)
# Note: prompt is not returned until device is ready to accept another commmand
#
specification "baytechOG" {
	timeout 	25   # about 5 sec for cycle command

	plug name { "1" "2" "3" "4" "5" "6" "7" "8" }

	script login {
		delay 0
	}
	script status_all {
		foreachplug {
			send "status %s\n"
			expect "Outlet ([0-9]+) is (on|off)\n"
			setplugstate $1 $2 on="on" off="off"
		}
	}
	script on {
		send "on %s\n"
		expect "Outlet ([0-9]) turned on"
	}
	script on_all {
		foreachplug {
			send "on %s\n"
			expect "Outlet ([0-9]+) turned on\n"
		}
	}
	script off {
		send "off %s\n"
		expect "Outlet ([0-9]) turned off"
	}
	script off_all {
		foreachplug {
			send "off %s\n"
			expect "Outlet ([0-9]+) turned off\n"
		}
	}
# If outlet is initially off, "reboot" will leave it off.
# This doesn't match PowerMan's semantics for cycle, so explicitly power
# off then on.
	script cycle {
		send "off %s\n"
		expect "Outlet ([0-9]+) turned off\n"
		delay 4
		send "on %s\n"
		expect "Outlet ([0-9]+) turned on\n"
	}
	script cycle_all {
		foreachplug {
			send "off %s\n"
			expect "Outlet ([0-9]+) turned off\n"
		}
		delay 4
		foreachplug {
			send "on %s\n"
			expect "Outlet ([0-9]+) turned on\n"
		}
	}
	script status_temp_all {
		send "temperature\n"
		expect "([0-9.]+)"
		setplugstate "1" $1
		setplugstate "2" $1
		setplugstate "3" $1
		setplugstate "4" $1
		setplugstate "5" $1
		setplugstate "6" $1
		setplugstate "7" $1
		setplugstate "8" $1
	}
}
